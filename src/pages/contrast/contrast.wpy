<style lang="less">
  .main{
    width:300px;
  }
  .main .big-btn{
    width:100%;
    background:#4c8cfe;
    color:#fff;
    margin-top:20px;
  }
  .relative{
    posotion:relative
  }
  .absolute{
    position:absolute
  }
  .clearfix:after {
     content:""; 
     display: block; 
     clear:both; 
  }
  .face-box{
    width:145px;
    border:solid 1px #cdcdcd;
    float:left;
    box-sizing:border-box;
    height:190px;
    margin-top:20px;
    border-radius:4px;
    margin-bottom:20px;
    position:relative;
    overflow:hidden
  }
  .main .face-box:nth-child(2){
    margin-right:10px;
  }
  .face-box .upload{
    width:32px;
    height:32px;
    posotion:absolute;
    margin-top:50%;
    margin-left:50%;
    transform:translate(-50%);
  }
  .face-box .faceimg{
    position:absolute;
    width:143px;
    height:190px;
    top:0;
    left:0
  }
  .top20{
    margin-top:20px;
  }
  .circle{
    width:100px;
    height:100px;
    border-radius:50px;
    border:solid 2px #4c8cfe;
    margin-left:50%;
    transform:translate(-50%);
    padding:15px 10px;
    box-sizing:border-box;
  }
  .circle .tt{
    color:#757575;
    text-align:center;
  }
  .circle .num{
    font-size : 36px;
    color:#4c8cfe;
    font-weight:bold;
    text-align:center;
  }
  .face-box .line{
    animation: myScan 1s infinite alternate;
    width:100%;
    height:2px;
    background : #4c8cfe;
    box-shadow : 0px 2px 3px #4c8cfe;
    position:absolute;
  }
  @keyframes  myScan{
      from { top:0px; }
      to { top: 98%; }
  }
  .cover{
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 11;
    background: rgba(255,255,255,0.95);
    left:0;
    top:0;
  }
  .cover .loading{
      width: 28px;
      height: 28px;
      border: 2px solid #409eff;
      border-radius: 50%;
      position: relative;
      animation: loader-scale 1s ease-out infinite;
      top: 50%;
      margin: -28px auto 0;
  }
  .cover .desc{
      position:relative;
      top:53%;
      text-align:center;
      font-size:8px;
      color:#757575;
  }
  @keyframes loader-scale {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: scale(1);
        opacity: 0;
    }
}

</style>
<template>
  <view class="container">
      <view class="main">
        <view class="circle">
          <view class="tt">相似度</view>
          <view class="num">{{score}}</view>
        </view> 
        <view class="face-box" @tap="upload" data-index="left">
          <image wx:if="{{!base64.left}}" class="upload" mode="aspectFit" src="../../sources/img/uploadfile.png"></image>
          <image wx:else class="faceimg" mode="aspectFill" src="{{src.left}}"></image>
          <view class="cover" wx:if="{{load.left}}"><view class="loading"></view><view class="desc">图片上传中</view></view>
          <view class="line" wx:if="{{isAnimation}}"></view>

        </view>
        <view class="face-box" @tap="upload" data-index="right">
          <image wx:if="{{!base64.right}}" class="upload" mode="aspectFit" src="../../sources/img/uploadfile.png"></image>
          <image wx:else class="faceimg" mode="aspectFill" src="{{src.right}}"></image>
          <view class="cover" wx:if="{{load.right}}"><view class="loading"></view><view class="desc">图片上传中</view></view>
          <view class="line" wx:if="{{isAnimation}}"></view>

        </view>

        <button class="big-btn" @tap="check">点击这里开始检测</button>
      </view> 
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import upng from 'upng-js'
  import Config from '@/config'

  import api from '@/utils/api'
  import tools from '@/utils/tools'
  import dialogs from '@/utils/dialogs'

  export default class Index extends wepy.page {
    config = {
        "navigationBarTitleText": "人脸对比"
    }
    data = {
      src:{
        left:'',
        right:''
      },
      base64:{
        left:'',
        right:''
      },
      load:{
        left:false,
        right:false
      },
      score : 0,
      isAnimation:false

    }
    onLoad(){
      this.canvas_bg = wx.createCanvasContext('bgCanvas')
      this.canvas_iloc = wx.createCanvasContext('ilocCanvas')
    }
    onShareAppMessage(res) {
      if (res.from === 'button') {
        // 来自页面内转发按钮
        console.log(res.target)
      }
      return {
        title: '快来开启人脸检测之旅吧！',
        path: '/pages/index',
        imageUrl : Config.shareimg
      }
    }
    upload(e){
      let that = this;
      let index = e.currentTarget.dataset.index;

      that.score = 0;
      that.setData({
        'score' : 0
      })
      let str = 'base64.' + index;
      that.setData({
        [str] : ''
      })
      that.base64[index] = '';
      that.$apply();

      wx.chooseImage({
        count:2,
        sizeType: ['original', 'compressed'], // original 原图，compressed 压缩图，默认二者都有
        sourceType: ['album', 'camera'],
        success:function(res){
          if(res.tempFilePaths.length == 2){
            that.src.left = res.tempFilePaths[0];
            that.src.right = res.tempFilePaths[1];
            that.setData({
              'src.left' : res.tempFilePaths[0],
              'src.right' : res.tempFilePaths[1],
            })
            for(let item in that.src){
              that.doUpload(item);
            }
          }else{
            that.src[index] = res.tempFilePaths[0];
            let str = 'src.' + index;
            that.setData({
              [str] : res.tempFilePaths[0],
            })
            that.doUpload(index);
          }
          that.$apply();
          
        }
      })
    }
    //正式上传
    doUpload(type){
      let that = this;
      let loadstr = 'load.' + type;
      that.load[type] = true;
      that.setData({
        [loadstr] : true
      })

      wx.uploadFile({  
        url: Config.apiBaseURL + '/uploadImage', 
        filePath: that.src[type],  
        name: 'file',  
        formData:{  
          'index': type,
        },  
        success: function(res){  
          console.log(res);
          if(res.statusCode == 200){
            let path_name = '';
            if(res.data){
              path_name = res.data;
            }
            let str = 'base64.' + type
            that.setData({
              [str] : path_name
            })
            that.base64[type] = path_name;
            that.$apply();
          }else{
            that.showErrMsg(res.errMsg);
          }
          let loadstr = 'load.' + type;
          that.load[type] = false;
          that.setData({
            [loadstr] : false
          })
        },
        fail : function(e){
          that.showErrMsg(e.errMsg); 
          let loadstr = 'load.' + type;
          that.load[type] = false;
          that.setData({
            [loadstr] : false
          })      
        }
      }) 
    }
    check(){
      let that = this;
      //上传图片，图片上传检测完成后，开始检测相似度
      if(that.base64.left && that.base64.right){
        that.isAnimation = true;
        that.setData({
          isAnimation : true
        })
        api.post('/faceMatch',{image1:that.base64.left,image2:that.base64.right}).then(function(res){
          that.buildData(res.result);
        }).catch(function(e){
          that.showErrMsg(e.errMsg);
          that.isAnimation = false;
          that.setData({
            isAnimation : false
          })
        }) 
      }else{
        that.showErrMsg('请上传两张照片，若您已经选择两张照片仍不能检测，请您尝试重新选择');
      }
      // setTimeout(function(){
      //   that.buildData(res.result);
      // },1000);
    }
    //绘制识别区域和识别内容
    buildData(data){
      let that = this;
      if(data.score){
        this.score = Number(data.score.toFixed(1)) || 0;
      }
      that.isAnimation = false;
      that.setData({
        isAnimation : false
      })
      this.$apply();  

    }

    showErrMsg(msg){
      wx.showToast({
        title: msg,
        icon:'none'
      })
    }

  }
  
</script>
